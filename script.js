// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö –∫–ª—é—á–µ–π
const users = {
    // –£—á–µ–Ω–∏–∫–∏
    'S0F1A2B3': { name: '–ê–π—Ä–∞–ø–µ—Ç—è–Ω—Ü –°–æ—Ñ–∏—è', role: '–£—á–µ–Ω–∏–∫', avatar: '–°–ê' },
    'B4G5R6T7': { name: '–ë–µ–±–∏—è –ë–∞–≥—Ä–∞—Ç', role: '–í–ª–∞–¥–µ–ª–µ—Ü —Å–∞–π—Ç–∞', avatar: '–ë–ë' },
    'D8M9T0R1': { name: '–ë–µ–ª—è–µ–≤ –î–º–∏—Ç—Ä–∏–π', role: '–£—á–µ–Ω–∏–∫', avatar: '–î–ë' },
    'A2R3T4M5': { name: '–ë–æ–∂–µ—Å–∫–∏–π –ê—Ä—Ç—ë–º', role: '–£—á–µ–Ω–∏–∫', avatar: '–ê–ë' },
    'V6E7R8O9': { name: '–ë—É–Ω–∫–æ–≤—Å–∫–∞—è –í–µ—Ä–æ–Ω–∏–∫–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–í–ë' },
    'U1L2Y3A4': { name: '–í–∞–ª–µ–µ–≤–∞ –£–ª—å—è–Ω–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–£–í' },
    'E5L6I7Z8': { name: '–í–æ—Ä–æ–±–µ–ª—å –ï–ª–∏–∑–∞–≤–µ—Ç–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–ï–í' },
    'K9A0R1I2': { name: '–ì–∞—Ç–∏–∫–æ–µ–≤–∞ –ö–∞—Ä–∏–Ω–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–ö–ì' },
    'P3O4L5I6': { name: '–ì–µ—Ä–∞—Å–∏–º–æ–≤–∞ –ü–æ–ª–∏–Ω–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–ü–ì' },
    'M7A8X9I0': { name: '–ì–æ—Ä–ª–æ–≤ –ú–∞–∫—Å–∏–º', role: '–£—á–µ–Ω–∏–∫', avatar: '–ú–ì' },
    'V1E2R3O4': { name: '–î–µ–º–∏–¥–æ–≤–∏—á –í–µ—Ä–æ–Ω–∏–∫–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–í–î' },
    'A5N6D7R8': { name: '–î—Ä—ã–±–∞–ª–æ–≤ –ê–Ω–¥—Ä–µ–π', role: '–£—á–µ–Ω–∏–∫', avatar: '–ê–î' },
    'K9I0R1A2': { name: '–ï–ª—Å—É–∫–æ–≤–∞ –ö–∏—Ä–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–ö–ï' },
    'Z3H4A5N6': { name: '–ï—Ä–º—É—Ö–∞–Ω–æ–≤ –ñ–∞–Ω–∞—Ö–º–µ–¥', role: '–£—á–µ–Ω–∏–∫', avatar: '–ñ–ï' },
    'L7I8A9N0': { name: '–ö–∞–ª–∏–Ω–∏–Ω–∞ –õ–∏–∞–Ω–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–õ–ö' },
    'E1V2G3E4': { name: '–ö–æ—á–º–∞—Ä –ï–≤–≥–µ–Ω–∏—è', role: '–£—á–µ–Ω–∏–∫', avatar: '–ï–ö' },
    'E5L6I7Z8': { name: '–õ–µ–æ–Ω—Ç—å–µ–≤–∞ –ï–ª–∏–∑–∞–≤–µ—Ç–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–ï–õ' },
    'E9L0I1Z2': { name: '–ù–∞–¥—å—è—Ä–Ω–∞—è –ï–ª–∏–∑–∞–≤–µ—Ç–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–ï–ù' },
    'K3S4E5N6': { name: '–û—á–∞–∫–æ–≤–∞ –ö—Å–µ–Ω–∏—è', role: '–£—á–µ–Ω–∏–∫', avatar: '–ö–û' },
    'A7L8I9N0': { name: '–ü—è–∂–∏–µ–≤–∞ –ê–ª–∏–Ω–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–ê–ü' },
    'K1I2R3I4': { name: '–†–∞–¥–∏–≤–∏–ª–æ–≤ –ö–∏—Ä–∏–ª–ª', role: '–£—á–µ–Ω–∏–∫', avatar: '–ö–†' },
    'G5R6I7G8': { name: '–†—ã–±–∞–∫ –ì—Ä–∏–≥–æ—Ä–∏–π', role: '–£—á–µ–Ω–∏–∫', avatar: '–ì–†' },
    'K9I0R1I2': { name: '–®–∞—Ä–∏–Ω –ö–∏—Ä–∏–ª–ª', role: '–£—á–µ–Ω–∏–∫', avatar: '–ö–®' },
    'E3K4A5T6': { name: '–®–∏–ª–æ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–ï–®' },
    'P7O8L9I0': { name: '–Ø–Ω—Ü–µ–≤–∏—á –ü–æ–ª–∏–Ω–∞', role: '–£—á–µ–Ω–∏–∫', avatar: '–ü–Ø' },
    
    // –£—á–∏—Ç–µ–ª—å
    'L1A2R3I4': { name: '–ê–ª–±–∞–µ–≤–∞ –õ–∞—Ä–∏—Å–∞ –ö–∞–¥—ã—Ä–æ–≤–Ω–∞', role: '–£—á–∏—Ç–µ–ª—å', avatar: '–õ–ê' }
};

// –î–∞–Ω–Ω—ã–µ –æ –º–µ—Å—Ç–∞—Ö —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
const placesData = {
    '–ö–æ—Ñ–µ–π–Ω—è ¬´Veranda¬ª': {
        coords: [59.9085, 29.0855],
        address: '–°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä, –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
        description: '–≠–ª–µ–≥–∞–Ω—Ç–Ω–∞—è –∫–æ—Ñ–µ–π–Ω—è —Å –ø–∞–Ω–æ—Ä–∞–º–Ω—ã–º –≤–∏–¥–æ–º'
    },
    '–ö–æ—Ñ–µ–π–Ω—è ¬´–ú–æ–π –°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä¬ª': {
        coords: [59.9012, 29.0801],
        address: '–°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä, —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω',
        description: '–£—é—Ç–Ω–æ–µ –º–µ—Å—Ç–æ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞'
    },
    '–†–µ—Å—Ç–æ—Ä–∞–Ω ¬´–ü—Ö–∞–ª–∏–•–∏–Ω–∫–∞–ª–∏¬ª': {
        coords: [59.897295, 29.079061],
        address: '–°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä, —É–ª–∏—Ü–∞ –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è',
        description: '–ê—É—Ç–µ–Ω—Ç–∏—á–Ω–∞—è –≥—Ä—É–∑–∏–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è'
    },
    '–†–µ—Å—Ç–æ—Ä–∞–Ω ¬´–¢–æ–∫–∏–æ-–°–∏—Ç–∏¬ª': {
        coords: [59.9005, 29.0923],
        address: '–°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä, —Ç–æ—Ä–≥–æ–≤—ã–π –∫–æ–º–ø–ª–µ–∫—Å',
        description: '–Ø–ø–æ–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è –ø—Ä–µ–º–∏—É–º-–∫–ª–∞—Å—Å–∞'
    },
    '–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –æ—Ç–¥—ã—Ö–∞ ¬´–•–µ–≤–∞–∞¬ª': {
        coords: [59.9156, 29.0654],
        address: '–°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä, –±–µ—Ä–µ–≥ –§–∏–Ω—Å–∫–æ–≥–æ –∑–∞–ª–∏–≤–∞',
        description: '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å –Ω–∞ –±–µ—Ä–µ–≥—É –∑–∞–ª–∏–≤–∞'
    }
};

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const loginScreen = document.getElementById('login-screen');
const mainContent = document.getElementById('main-content');
const accessKeyInput = document.getElementById('access-key');
const loginBtn = document.getElementById('login-btn');
const userInfo = document.getElementById('user-info');
const userAvatar = document.getElementById('user-avatar');
const userName = document.getElementById('user-name');
const userRole = document.getElementById('user-role');
const welcomeName = document.getElementById('welcome-name');
const logoutBtn = document.getElementById('logout-btn');

// –≠–ª–µ–º–µ–Ω—Ç—ã –∫–∞—Ä—Ç—ã
const mapModal = document.getElementById('map-modal');
const mapContainer = document.getElementById('map-container');
const mapPlaceTitle = document.getElementById('map-place-title');
const mapAddressText = document.getElementById('map-address-text');
const closeMapModal = document.getElementById('close-map-modal');

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
let ymap = null;
let currentPlace = null;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.addEventListener('load', () => {
    const savedUser = localStorage.getItem('currentUser');
    if (savedUser) {
        const user = JSON.parse(savedUser);
        showMainContent(user);
    } else {
        accessKeyInput.focus();
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'success') {
    const existingNotification = document.querySelector('.notification');
    if (existingNotification) {
        existingNotification.remove();
    }

    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);

    setTimeout(() => {
        notification.classList.add('show');
    }, 100);

    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }, 3000);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function showMainContent(user) {
    welcomeName.textContent = user.name.split(' ')[0];
    
    loginScreen.style.display = 'none';
    mainContent.style.display = 'block';
    
    if (user.role === '–í–ª–∞–¥–µ–ª–µ—Ü —Å–∞–π—Ç–∞') {
        showNotification('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —Å–æ–∑–¥–∞—Ç–µ–ª—å! üéâ –í–∞—à —Å–∞–π—Ç –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ!');
    } else if (user.role === '–£—á–∏—Ç–µ–ª—å') {
        showNotification('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –õ–∞—Ä–∏—Å–∞ –ö–∞–¥—ã—Ä–æ–≤–Ω–∞! üë©‚Äçüè´ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!');
    } else {
        showNotification(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${user.name.split(' ')[0]}! ‚ú® –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º`);
    }

    window.scrollTo({ top: 0, behavior: 'smooth' });
    setTimeout(initCardAnimations, 500);
}

// –§—É–Ω–∫—Ü–∏—è –≤—Ö–æ–¥–∞
function login() {
    const key = accessKeyInput.value.trim().toUpperCase();
    
    if (!key) {
        showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞', 'error');
        return;
    }

    loginBtn.classList.add('loading');
    
    setTimeout(() => {
        const user = users[key];
        
        if (user) {
            userAvatar.textContent = user.avatar;
            userName.textContent = user.name;
            userRole.textContent = user.role;
            userInfo.classList.add('show');
            
            setTimeout(() => {
                localStorage.setItem('currentUser', JSON.stringify(user));
                showMainContent(user);
            }, 800);
            
        } else {
            showNotification('–ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞', 'error');
            accessKeyInput.style.animation = 'shake 0.5s';
            setTimeout(() => {
                accessKeyInput.style.animation = '';
            }, 500);
        }
        
        loginBtn.classList.remove('loading');
    }, 1200);
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞
function logout() {
    localStorage.removeItem('currentUser');
    accessKeyInput.value = '';
    userInfo.classList.remove('show');
    mainContent.style.display = 'none';
    loginScreen.style.display = 'flex';
    accessKeyInput.focus();
    showNotification('–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã. –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–∫–æ—Ä–µ–µ! üëã');
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã
function initMap(placeName) {
    const place = placesData[placeName];
    if (!place) return;

    currentPlace = place;

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã
    mapContainer.innerHTML = '';
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É
    ymap = new ymaps.Map(mapContainer, {
        center: place.coords,
        zoom: 15,
        controls: ['zoomControl', 'fullscreenControl']
    }, {
        searchControlProvider: 'yandex#search'
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫—É
    const placemark = new ymaps.Placemark(place.coords, {
        balloonContent: `
            <div style="padding: 10px;">
                <h3 style="margin: 0 0 8px 0; color: #333;">${placeName}</h3>
                <p style="margin: 0; color: #666;">${place.description}</p>
                <p style="margin: 8px 0 0 0; color: #888;">${place.address}</p>
            </div>
        `
    }, {
        preset: 'islands#redDotIcon'
    });

    ymap.geoObjects.add(placemark);
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–ª—É–Ω
    placemark.balloon.open();

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    mapPlaceTitle.textContent = placeName;
    mapAddressText.textContent = place.address;
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∫–∞—Ä—Ç—ã
function showMap(placeName) {
    if (!placeName || !placesData[placeName]) {
        showNotification('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞', 'error');
        return;
    }

    mapModal.classList.add('show');
    document.body.style.overflow = 'hidden';

    // –ï—Å–ª–∏ –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
    if (window.ymaps) {
        ymaps.ready(() => initMap(placeName));
    } else {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç—ã
        const script = document.createElement('script');
        script.src = 'https://api-maps.yandex.ru/2.1/?lang=ru_RU';
        script.onload = () => {
            ymaps.ready(() => initMap(placeName));
        };
        document.head.appendChild(script);
    }
}

// –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—Ç—ã
function hideMap() {
    mapModal.classList.remove('show');
    document.body.style.overflow = 'auto';
    
    if (ymap) {
        ymap.destroy();
        ymap = null;
    }
}

// –ê–Ω–∏–º–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–µ–∫
function initCardAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    const cards = document.querySelectorAll('.place-card');
    cards.forEach((card, index) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        card.style.transition = `all 0.6s cubic-bezier(0.4, 0, 0.2, 1) ${index * 0.1}s`;
        observer.observe(card);
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
loginBtn.addEventListener('click', login);

accessKeyInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
        login();
    }
});

logoutBtn.addEventListener('click', logout);

closeMapModal.addEventListener('click', hideMap);

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
mapModal.addEventListener('click', (e) => {
    if (e.target === mapModal) {
        hideMap();
    }
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ ESC
document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && mapModal.classList.contains('show')) {
        hideMap();
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
document.addEventListener('click', (e) => {
    if (e.target.classList.contains('action-btn') || 
        e.target.closest('.action-btn')) {
        const btn = e.target.classList.contains('action-btn') ? e.target : e.target.closest('.action-btn');
        const card = btn.closest('.place-card');
        const placeName = card.querySelector('.card-title').textContent;
        
        if (btn.classList.contains('primary')) {
            showNotification('–§—É–Ω–∫—Ü–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞! üìÖ');
        } else if (btn.querySelector('.fa-map-marker-alt') || btn.textContent.includes('–∫–∞—Ä—Ç–µ')) {
            showMap(placeName);
        } else {
            showNotification('–§—É–Ω–∫—Ü–∏—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞! ‚ö°');
        }
    }
});

// –ê–Ω–∏–º–∞—Ü–∏—è —Ç—Ä—è—Å–∫–∏ –¥–ª—è –æ—à–∏–±–æ–∫
const style = document.createElement('style');
style.textContent = `
    @keyframes shake {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        75% { transform: translateX(5px); }
    }
`;
document.head.appendChild(style);

// –ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
console.log('üå≤ –ü—Ä–µ–º–∏—É–º –≥–∏–¥ –°–æ—Å–Ω–æ–≤—ã–π –ë–æ—Ä - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏:');
console.log('‚≠ê –û—Å–æ–±—ã–µ –∫–ª—é—á–∏:');
console.log('   B4G5R6T7 - –ë–µ–±–∏—è –ë–∞–≥—Ä–∞—Ç (–í–ª–∞–¥–µ–ª–µ—Ü —Å–∞–π—Ç–∞)');
console.log('   L1A2R3I4 - –ê–ª–±–∞–µ–≤–∞ –õ–∞—Ä–∏—Å–∞ –ö–∞–¥—ã—Ä–æ–≤–Ω–∞ (–£—á–∏—Ç–µ–ª—å)');
console.log('');
console.log('üè™ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Å—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç–µ:');
Object.keys(placesData).forEach(place => {
    console.log(`   üìç ${place} - ${placesData[place].address}`);
});
